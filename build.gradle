group 'org.bitbucket.lykke'
version '1.0.1-SNAPSHOT'

buildscript {
    ext.kotlin_version = '1.2.10'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'maven'

repositories {
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}

ext {
    kotlin_utils_version = '0.0.11-SNAPSHOT'
    me_message_subscriber_version = '1.0.1-SNAPSHOT'
    azure_storage_version = '4.0.0'
    gson_version = '2.6.2'
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.bitbucket.lykke:kotlin-utils:$rootProject.ext.kotlin_utils_version"
    compile "org.bitbucket.lykke:me-message-subscriber:$rootProject.ext.me_message_subscriber_version"
    compile "com.microsoft.azure:azure-storage:$rootProject.ext.azure_storage_version"
    compile "com.google.code.gson:gson:$rootProject.ext.gson_version"
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict', '-Xno-param-assertions', '-Xno-call-assertions']
        jvmTarget = '1.8'
    }
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

uploadArchives {
    repositories {
        mavenDeployer {

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                if (project.hasProperty('teamcity')) {
                    authentication(userName: teamcity['ossrh.username'], password: teamcity['ossrh.password'])
                } else {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }
            }

            pom.project {
                name 'common-client-accounts'
                packaging 'jar'
            }
        }
    }
}


